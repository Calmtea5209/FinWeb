services:
  db:
    image: timescale/timescaledb:latest-pg15
    volumes:
      - db_data:/var/lib/postgresql/data
    container_name: finlab_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    container_name: finlab_redis
    ports:
      - "6379:6379"

  api:
    build: ./apps/api
    container_name: finlab_api
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=${REDIS_URL}
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-8000}
    ports:
      - "${API_PORT:-8000}:8000"
    command: uvicorn app.main:app --host ${API_HOST:-0.0.0.0} --port ${API_PORT:-8000} --reload
    volumes:
      - ./apps/api:/app            # 後端程式碼熱重載（我們已用 uvicorn --reload）

  worker:
    build: ./apps/api
    container_name: finlab_worker
    depends_on:
      - api
      - redis
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=${REDIS_URL}
    command: bash -lc "rq worker -u ${REDIS_URL} default"

  seed:
    build: ./apps/api
    container_name: finlab_seed
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    command: bash -lc "python -m app.scripts.seed_data"

  web:
    build: ./apps/web
    container_name: finlab_web
    depends_on:
      - api
    environment:
      # Use internal service name for server-side fetches from Next routes
      - NEXT_PUBLIC_API_URL=http://api:${API_PORT:-8000}
      - PORT=${WEB_PORT:-3000}
    ports:
      - "${WEB_PORT:-3000}:3000"
    command: npm run dev
    volumes:
      - ./apps/web:/app            # 前端程式碼熱重載（next dev）
      - /app/node_modules          # 讓容器內安裝的依賴不被覆蓋

volumes:
  db_data:
  redis_data:
